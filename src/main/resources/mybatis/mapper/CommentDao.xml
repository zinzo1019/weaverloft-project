<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.choyoujin.DAO.CommentDao">

<!--    게시글 번호로 댓글 리스트 가져오기-->
<!--    <select id="findAllByPostId" resultType="com.example.choyoujin.DTO.CommentDto">-->
<!--        select * from comment c-->
<!--        left join tb_user u-->
<!--        on c.tb_user_id = u.email-->
<!--        left join image i-->
<!--        on u.image_id = i.id-->
<!--        where c.post_id = #{postId}-->
<!--        AND c.comment_id IS NULL-->
<!--    </select>-->

    <!-- 댓글과 대댓글을 계층적으로 검색 -->
    <select id="findAllByPostId" parameterType="int" resultMap="commentResult">
        WITH RECURSIVE CommentHierarchy AS (
            SELECT
                c.id,
                c.content,
                c.comment_id,
                0 AS level,
                u.email,
                i.pic_byte
            FROM
                comment c
            LEFT JOIN tb_user u ON c.tb_user_id = u.email
            LEFT JOIN image i ON u.image_id = i.id
            WHERE
                comment_id IS NULL
              AND post_id = #{postId} -- 해당 게시글의 최상위 댓글

            UNION ALL

            SELECT
                c.id,
                c.content,
                c.comment_id,
                ch.level + 1 AS level,
                u.email,
                i.pic_byte

            FROM
                comment c
                JOIN CommentHierarchy ch ON c.comment_id = ch.id
                LEFT JOIN tb_user u ON c.tb_user_id = u.email
                LEFT JOIN image i ON u.image_id = i.id
        )
        SELECT
            id,
            content,
            level
        FROM
            CommentHierarchy
        ORDER BY
            id;
    </select>

    <!-- ResultMap 정의 -->
    <resultMap id="commentResult" type="com.example.choyoujin.DTO.CommentDto">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="level" column="level"/>
    </resultMap>




<!--    댓글 번호로 대댓글 리스트 가져오기-->
<!--    <select id="findAllByCommentId" resultType="com.example.choyoujin.DTO.CommentDto">-->
<!--        select * from comment c-->
<!--        left join tb_user u-->
<!--        on c.tb_user_id = u.email-->
<!--        left join image i-->
<!--        on u.image_id = i.id-->
<!--        where c.comment_id = #{commentId}-->
<!--    </select>-->

<!--    댓글 번호로 댓글 정보 가져오기-->
    <select id="findById" resultType="com.example.choyoujin.DTO.CommentDto">
        select * from comment
        where id = #{id}
    </select>

<!--    댓글 저장하기-->
    <insert id="saveComment" parameterType="com.example.choyoujin.DTO.CommentDto">
        insert into comment (content, tb_user_id, post_id)
        values (#{content}, #{email}, #{postId})
    </insert>

<!--    대댓글 저장하기-->
    <insert id="saveReply" parameterType="com.example.choyoujin.DTO.CommentDto">
        insert into comment (content, tb_user_id, comment_id, level)
        values (#{content}, #{email}, #{commentId}, #{level})
    </insert>

    <!-- 대댓글 조회 -->
    <select id="selectReplies" parameterType="int" resultType="com.example.choyoujin.DTO.CommentDto">
        SELECT * FROM comment
        WHERE post_id = #{postId}
        ORDER BY level ASC, id ASC;
    </select>


</mapper>