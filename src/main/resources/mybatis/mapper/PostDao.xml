<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.choyoujin.DAO.PostDao">
    <!--    전체 게시글 가져오기-->
    <select id="listDao" resultType="com.example.choyoujin.DTO.PostDto">
        select *
        from post
        order by id desc
    </select>

    <!--    게시판 번호로 게시글 가져오기-->
    <select id="findAllByBoardId" resultType="com.example.choyoujin.DTO.PostDto">
        select *, u.name as userName
        from post p
                 left join board b on p.board_id = b.id
                 left join tb_user u on p.tb_user_id = u.email
        where board_id = #{boardId}
        ORDER BY p.id DESC
            LIMIT #{size}
        OFFSET #{page}
    </select>

    <!--  권한에 따른 게시글 리스트 가져오기-->
    <select id="findAllByRole" resultType="com.example.choyoujin.DTO.PostDto">
        select *, b.name as boardName, u.name as userName
        from post p
                 left join board b on p.board_id = b.id
                 left join tb_user u on p.tb_user_id = u.email
        where b.role = #{role}
        ORDER BY p.id DESC
            LIMIT #{size}
        OFFSET #{page}
    </select>

    <!--    게시글 개인 뷰 가져오기-->
    <select id="viewDao" resultType="com.example.choyoujin.DTO.PostDto">
        select *, u.name as userName
        from post p
                 left join tb_user u
                           on p.tb_user_id = u.email
        where id = #{id}
    </select>

    <!--    파일 아이디로 파일 가져오기-->
    <select id="findFileById" resultType="com.example.choyoujin.DTO.FileDto">
        select *
        from file
        where id = #{id}
    </select>

    <!--    게시글 사진 리스트 가져오기-->
    <select id="findAllByPostId" resultType="com.example.choyoujin.DTO.ImageDto">
        select *
        from post_image
        where post_id = #{postId}
    </select>

    <!--    게시글 파일 리스트 가져오기-->
    <select id="findAllFilesByPostId" resultType="com.example.choyoujin.DTO.FileDto">
        select *
        from file
        where post_id = #{postId}
    </select>

    <!--    게시글 작성하기-->
    <insert id="writeDao">
        insert into post (tb_user_id, title, content, board_id, role, create_date, create_time)
        values (#{email}, #{title}, #{content}, #{boardId}, #{role}, #{createDate}, #{createTime})
    </insert>

    <!--    파일 저장하기-->
    <insert id="saveFile">
        insert into file (name, path, post_id)
        values (#{name}, #{path}, #{postId})
    </insert>

    <!--    게시글 사진 저장하기-->
    <insert id="saveImages" parameterType="com.example.choyoujin.DTO.ImageDto" useGeneratedKeys="true" keyProperty="id">
        insert into post_image (name, type, pic_byte, post_id)
        values (#{name}, #{type}, #{picByte}, #{postId})
    </insert>

    <!-- 게시글 수정하기 -->
    <update id="modifyPost" parameterType="com.example.choyoujin.DTO.PostDto">
        UPDATE post
        SET title       = #{title},
            content     = #{content},
            update_date = #{updateDate},
            update_time = #{updateTime}
        WHERE id = #{id}
    </update>

    <!--    게시글 삭제하기 - String -> Integer 타입으로 형변환 필수-->
    <delete id="deletePostById">
        delete
        from post
        where id = cast(#{id} as integer)
    </delete>

    <!--    게시글 개수 세기-->
    <select id="articleCount" resultType="_int">
        select count(*)
        from post
    </select>

    <!--    가장 최근 게시글의 아이디 가져오기-->
    <select id="findMaxPostId" resultType="_int">
        select max(id)
        from post;
    </select>

    <select id="findPostsByPage" resultType="com.example.choyoujin.DTO.PostDto">
        SELECT *
        FROM post
        ORDER BY id DESC
            LIMIT #{size}
        OFFSET #{page}
    </select>

    <!-- 게시글 검색 (ROLE_GUEST) -->
    <select id="searchPosts" resultType="com.example.choyoujin.DTO.PostDto">
        SELECT *, u.name as userName
        FROM post p
                 LEFT JOIN tb_user u
                           ON p.tb_user_id = u.email
        WHERE p.role = 'ROLE_GUEST'
          and (title LIKE '%' || #{keyword} || '%'
           OR
            p.content LIKE '%' || #{keyword} || '%'
           OR
            u.name LIKE '%' || #{keyword} || '%')
        ORDER BY id DESC
            LIMIT #{size}
        OFFSET #{page}
    </select>

    <!-- 게시글 검색 -->
    <select id="searchPostsByBoardId" resultType="com.example.choyoujin.DTO.PostDto">
        SELECT *, u.name as userName
        FROM post p
                 LEFT JOIN tb_user u
                           ON p.tb_user_id = u.email
        WHERE board_id = #{boardId}
          and (p.title LIKE '%' || #{keyword} || '%'
            OR
               p.content LIKE '%' || #{keyword} || '%'
            OR
               u.name LIKE '%' || #{keyword} || '%')
        ORDER BY id DESC
            LIMIT #{size}
        OFFSET #{page}
    </select>

    <!--    전체 게시글 세기-->
    <select id="count" resultType="int">
        <![CDATA[
        select count(id)
        from post
        where id > 0
        ]]>
    </select>

    <!--    권한마다 게시글 세기-->
    <select id="countByRole" resultType="int">
        <![CDATA[
        select count(id)
        from post
        where id > 0
          and role = #{role}
        ]]>
    </select>

    <!--    게시판마다 게시글 세기-->
    <select id="countByBoardId" resultType="int">
        <![CDATA[
        select count(id)
        from post
        where id > 0
          and board_id = #{boardId}
        ]]>
    </select>

    <!--    검색어로 최근 게시글에서 게시글 세기-->
    <select id="countByKeywordByGuest" resultType="int">
        <![CDATA[
        select count(id)
        from post p
                 LEFT JOIN tb_user u
                           ON p.tb_user_id = u.email
        where id > 0
          and p.role = 'ROLE_GUEST'
          and (p.title LIKE '%' || #{keyword} || '%'
            OR
               p.content LIKE '%' || #{keyword} || '%'
            OR
               u.name LIKE '%' || #{keyword} || '%')
        ]]>
    </select>

    <!--    검색어로 특정 게시판에서 게시글 세기-->
    <select id="countByKeywordByBoardId" resultType="int">
        <![CDATA[
        select count(id)
        FROM post p
                 LEFT JOIN tb_user u
                           ON p.tb_user_id = u.email
        where id > 0
          and board_id = #{boardId}
          and (p.title LIKE '%' || #{keyword} || '%'
            OR
               p.content LIKE '%' || #{keyword} || '%'
            OR
               u.name LIKE '%' || #{keyword} || '%')
        ]]>
    </select>

</mapper>
